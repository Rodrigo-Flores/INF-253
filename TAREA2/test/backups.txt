// SIMPLE
tPregunta pregunta = leerPregunta(certamen, 0);
tEnunciadoAlternativa *enunciado = (tEnunciadoAlternativa *)pregunta.enunciado;
printf("%s\n", enunciado->enunciado);

// VERDADERO FALSO
tPregunta pregunta3 = leerPregunta(certamen, 1);
tEnunciadoVerdaderoFalso *enunciado3 = (tEnunciadoVerdaderoFalso *)pregunta3.enunciado;
printf("%s\n", enunciado3->enunciado);

// MULTIPLE
tPregunta pregunta2 = leerPregunta(certamen, 2);
tEnunciadoAlternativaMultiple *enunciado2 = (tEnunciadoAlternativaMultiple *)pregunta2.enunciado;
printf("%i\n", enunciado2->n_alternativas);
printf("%i\n", enunciado2->n_correctas);
printf("%s\n", enunciado2->enunciado);
// printf("Enunciado: %s \n", pregunta2->enunciado->enunciado);

// COMPLETAR 
tPregunta pregunta4 = leerPregunta(certamen, 3);
tEnunciadoCompletar *enunciado4 = (tEnunciadoCompletar *)pregunta4.enunciado;
printf("%i\n", enunciado4->n_textos);
printf("%s\n", enunciado4->textos[0]);
// printf("%s\n", enunciado4->respuestas[0]);

tPregunta pregunta5 = leerPregunta(certamen, 4);
tEnunciadoCompletar *enunciado5 = (tEnunciadoCompletar *)pregunta5.enunciado;
printf("%i\n", enunciado5->n_textos);
// printf("%s\n", enunciado5->textos[0]);
// printf("%s\n", enunciado5->respuestas[0]);

tPregunta pregunta6 = leerPregunta(certamen, 5);
tEnunciadoCompletar *enunciado6 = (tEnunciadoCompletar *)pregunta6.enunciado;
printf("%i\n", enunciado6->n_textos);
// printf("%s\n", enunciado6->textos[0]);
// printf("%s\n", enunciado6->respuestas[0]);



fseek(archivo, 0, SEEK_SET);
    while (fgets(linea, 128, archivo))
    {
        strtok(linea, "\n");
        if (strcmp(linea, "AlternativaSimple") == 0.0)
        {
            tPregunta pregunta = leerPregunta(certamen, k);
            tEnunciadoAlternativa *enunciado = (tEnunciadoAlternativa *)pregunta.enunciado;
            printf("SIMPLE: %s\n", enunciado->enunciado);
            for (int j = 0; j < enunciado->n_alternativas; j++)
            {
                printf("%d. %s\n", j + 1, enunciado->alternativas[j]);
            }
            k++;
        }
        if (strcmp(linea, "AlternativaMultiple") == 0.0)
        {
            tPregunta pregunta = leerPregunta(certamen, k);
            tEnunciadoAlternativaMultiple *enunciado = (tEnunciadoAlternativaMultiple *)pregunta.enunciado;
            printf("MULTIPLE: %s\n", enunciado->enunciado);
            for (int j = 0; j < enunciado->n_alternativas; j++)
            {
                printf("%d. %s\n", j + 1, enunciado->alternativas[j]);
            }
            k++;
        }
        if (strcmp(linea, "VerdaderoFalso") == 0.0)
        {
            tPregunta pregunta = leerPregunta(certamen, k);
            tEnunciadoVerdaderoFalso *enunciado = (tEnunciadoVerdaderoFalso *)pregunta.enunciado;
            printf("BOOL: %s\n", enunciado->enunciado);
            k++;
        }
        if (strcmp(linea, "Completar") == 0.0)
        {
            tPregunta pregunta = leerPregunta(certamen, k);
            tEnunciadoCompletar *enunciado = (tEnunciadoCompletar *)pregunta.enunciado;
            printf("%d\n", k);
            for (int j = 0; j < enunciado->n_textos; j++)
            {
                printf("COMPLETAR: %s\n", enunciado->textos[j]);
            }
            k++;
        }
    }


    for (int i = 0; i < largoCertamen(*certamen); i++)
    {
        tPregunta pregunta = leerPregunta(certamen, i);
        if (strcmp(pregunta.tipo, "AlternativaSimple") == 0.0)
        {
            tPregunta pregunta = leerPregunta(certamen, i);
            tEnunciadoAlternativa *enunciado = (tEnunciadoAlternativa *)pregunta.enunciado;
            printf("SIMPLE: %s\n", enunciado->enunciado);
            for (int j = 0; j < enunciado->n_alternativas; j++)
            {
                printf("%d. %s\n", j + 1, enunciado->alternativas[j]);
            }
        }
        else if (strcmp(pregunta.tipo, "AlternativaMultiple") == 0.0)
        {
            tPregunta pregunta = leerPregunta(certamen, i);
            tEnunciadoAlternativaMultiple *enunciado = (tEnunciadoAlternativaMultiple *)pregunta.enunciado;
            printf("MULTIPLE: %s\n", enunciado->enunciado);
            for (int j = 0; j < enunciado->n_alternativas; j++)
            {
                printf("%d. %s\n", j + 1, enunciado->alternativas[j]);
            }
        }
        else if (strcmp(pregunta.tipo, "VerdaderoFalso") == 0.0)
        {
            tPregunta pregunta = leerPregunta(certamen, i);
            tEnunciadoVerdaderoFalso *enunciado = (tEnunciadoVerdaderoFalso *)pregunta.enunciado;
            printf("BOOL: %s\n", enunciado->enunciado);
        }
        else if (strcmp(pregunta.tipo, "Completar") == 0.0)
        {
            tPregunta pregunta = leerPregunta(certamen, i);
            tEnunciadoCompletar *enunciado = (tEnunciadoCompletar *)pregunta.enunciado;
            printf("%d\n", i);
            for (int j = 0; j < enunciado->n_textos; j++)
            {
                printf("COMPLETAR: %s\n", enunciado->textos[j]);
            }
        }
    }